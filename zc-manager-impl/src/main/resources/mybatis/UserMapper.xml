<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hehuiming.zc.manager.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.hehuiming.zc.bean.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loginacct" jdbcType="VARCHAR" property="loginacct" />
    <result column="userpswd" jdbcType="CHAR" property="userpswd" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="createtime" jdbcType="CHAR" property="createtime" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.hehuiming.zc.bean.User">
    insert into t_user (id, loginacct, userpswd, 
      username, email, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR}, 
      #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
      )
  </insert>
  
  
  <!-- createtime = #{createtime,jdbcType=CHAR}, userpswd = #{userpswd,jdbcType=CHAR},-->
  <update id="updateByPrimaryKey" parameterType="com.hehuiming.zc.bean.User">
    update t_user
    set loginacct = #{loginacct,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, loginacct, userpswd, username, email, createtime
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, loginacct, userpswd, username, email, createtime
    from t_user
  </select>
  
  
  <select id="selectByloginacctAndUserpswd" parameterType = "map" resultMap="BaseResultMap">
    select id, loginacct, userpswd, username, email, createtime
    from t_user where loginacct = #{loginacct} and  userpswd = #{userpswd}
  </select>
  
  
  <!--resultType:返回基本类型和普通对象直接写，多条记录返回list写list里封装的类型  -->
  <!-- resultMap功能与resultType有重叠 -->
  <!-- 多个对象直接返回list,多个参数传进来,方法定义时@Param,这里就写参数名 -->
  <select id="selectByLimit"  resultMap="BaseResultMap"> 
    select id, loginacct, userpswd, username, email, createtime
    from t_user 
    <where>
    	<if test="searchText !=null">
    		username  like concat('%', #{searchText}, '%') 
    	</if>
    </where>
    order by createtime desc 
    LIMIT #{begin} , #{Size}
  </select>
  
  <select id="selectCount"  resultType="int"> 
    select count(*) from t_user
    <where>
    	<if test="searchText !=null">
    		username  like concat('%', #{searchText}, '%') ;
    	</if>
    </where>
  </select>
</mapper>